buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

//apply from: '../gradle/docker.gradle'

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/groups/public" }
}

dependencies {
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.cloud:spring-cloud-starter-config')
//    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
//    compile('org.springframework.boot:spring-boot-starter-security')

    compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')

    compile project(':feign-spring-client')


//    compile('org.springframework.cloud:spring-cloud-starter-feign')
    compile('org.springframework.cloud:spring-cloud-starter-openfeign')
//    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-feignClient')

//    compile('org.springframework.cloud:spring-cloud-starter-hystrix')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')


    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')

    runtime('com.h2database:h2')
//    runtime('org.mariadb.jdbc:mariadb-java-client')
    testCompile('org.springframework.boot:spring-boot-starter-test')
//    testCompile('org.flywaydb.flyway-test-extensions:flyway-spring-test:5.0.0')
}

dependencyManagement {
    resolutionStrategy {
//        failOnVersionConflict()
        // cache dynamic versions for 10 minutes
        cacheDynamicVersionsFor 10 * 60, 'seconds'
        // don't cache changing modules at all
        cacheChangingModulesFor 0, 'seconds'
    }
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}